unit unFrmLstEditSOSJ;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, unFrmTplGrid, StdCtrls, ExtCtrls, cxGraphics, cxControls,
  cxLookAndFeels, cxLookAndFeelPainters, cxStyles, dxSkinsCore, dxSkinBlack,
  dxSkinBlue, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide,
  dxSkinFoggy, dxSkinGlassOceans, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMoneyTwins,
  dxSkinOffice2007Black, dxSkinOffice2007Blue, dxSkinOffice2007Green,
  dxSkinOffice2007Pink, dxSkinOffice2007Silver, dxSkinOffice2010Black,
  dxSkinOffice2010Blue, dxSkinOffice2010Silver, dxSkinPumpkin, dxSkinSeven,
  dxSkinSharp, dxSkinSilver, dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008,
  dxSkinsDefaultPainters, dxSkinValentine, dxSkinXmas2008Blue,
  dxSkinscxPCPainter, cxCustomData, cxFilter, cxData, cxDataStorage, cxEdit, DB,
  cxDBData, cxCheckBox, cxSpinEdit, cxContainer, cxLabel, cxGridLevel,
  cxGridCustomTableView, cxGridTableView, cxGridDBTableView, cxClasses,
  cxGridCustomView, cxGrid, cxPC, ZAbstractRODataset, ZDataset, Math;

type
  TfrmLstEditSOSJ = class(TfrmTplGrid)
    Label13: TLabel;
    cxgrd1: TcxGrid;
    cxtbSJ: TcxGridDBTableView;
    cxTblDet: TcxGridDBTableView;
    cxColTblDetid: TcxGridDBColumn;
    cxColTblDetid_ref: TcxGridDBColumn;
    cxColTblDetno_bukti: TcxGridDBColumn;
    cxColTblDetkode_brg: TcxGridDBColumn;
    cxColTblDetdeskripsi: TcxGridDBColumn;
    cxColTblDetqty: TcxGridDBColumn;
    cxColTblDetsatuan: TcxGridDBColumn;
    cxColTblDetharga: TcxGridDBColumn;
    cxColTblDetmata_uang: TcxGridDBColumn;
    cxgrdlvl1Grid1Level1: TcxGridLevel;
    Panel3: TPanel;
    cxLabel1: TcxLabel;
    cxGrid1: TcxGrid;
    cxtbSJDet: TcxGridDBTableView;
    cxGrid1Level1: TcxGridLevel;
    zqrSJ: TZReadOnlyQuery;
    dsSJ: TDataSource;
    zqrSJDet: TZReadOnlyQuery;
    dsSJDet: TDataSource;
    cxColTblTrsMasukDetno_bukti: TcxGridDBColumn;
    cxColTblTrsMasukDetkode_brg: TcxGridDBColumn;
    cxColTblTrsMasukDetdeskripsi: TcxGridDBColumn;
    cxColTblTrsMasukDetsatuan: TcxGridDBColumn;
    cxColTblTrsMasukDetqty: TcxGridDBColumn;
    cxColTblTrsMasukDetketerangan: TcxGridDBColumn;
    cxColTblTrsMasukHeadno_bukti: TcxGridDBColumn;
    cxColTblTrsMasukHeadtanggal: TcxGridDBColumn;
    cxColTblTrsMasukHeaduser: TcxGridDBColumn;
    cxColTblTrsMasukHeaduser_dept: TcxGridDBColumn;
    btnPosting: TButton;
    cxtbSJColumn2: TcxGridDBColumn;
    cxtbSJColumn1: TcxGridDBColumn;
    Button1: TButton;
    cxtbSJColumn3: TcxGridDBColumn;
    cxColQtySO: TcxGridDBColumn;
    cxtbSJDetColumn1: TcxGridDBColumn;
    cxtbSJColumn4: TcxGridDBColumn;
    Button2: TButton;
    procedure btnTambahClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnRefreshClick(Sender: TObject);
    procedure cxtbSJFocusedRecordChanged(Sender: TcxCustomGridTableView;
      APrevFocusedRecord, AFocusedRecord: TcxCustomGridRecord;
      ANewItemRecordFocusingChanged: Boolean);
    procedure btnEditClick(Sender: TObject);
    procedure btnHapusClick(Sender: TObject);
    procedure btnPostingClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);

  private
    mjenis : string;
    function CheckSOComplete: boolean;
  public
    { Public declarations }
  end;

var
  frmLstEditSOSJ: TfrmLstEditSOSJ;

implementation

uses unDM, unTools, unFrmUtama, unFrmInputKoreksi, unFrmInputSuratJalan,
  unFrmLapSJ;

{$R *.dfm}

procedure TfrmLstEditSOSJ.btnEditClick(Sender: TObject);
var
 f: TfrmInputSuratJalan;
 ts: TcxTabSheet;
 q: TZQuery;
begin
  inherited;
  //MsgBox('Mohon maaf, modul ini belum bisa digunakan.');
  //Abort;

  //cek jenis SJ, jika tanpa SO, bisa di edit
  if zqrSJ.FieldByName('jenis_sj').AsInteger = 0 then begin
    MsgBox('Transaksi Surat Jalan menggunakan SO tidak bisa di edit.');
    Abort;
  end;

  if not fu.CekTabOpen('Edit Surat Jalan') then begin
    ts := TcxTabSheet.Create(Self);
    ts.PageControl := frmUtama.pgMain;
    //if zqrSJ.FieldByName('f_posting').AsString = '1' then begin
    //  MsgBox('Mohon Maaf, surat jalan tidak bisa diedit, karena sudah di posting.');
    //  Abort;
    //end;
    f := TfrmInputSuratJalan.Create(Self);
    f.TabSheet := Self.Parent as TcxTabSheet;
    f.FormInduk := Self;
    ts.Caption := 'Edit Surat Jalan';
    f.Jenis := 'E';
    f.EditKey := zqrSJ.FieldByName('id').AsString;
    f.Parent := ts;
    ts.Caption := f.Caption;
    f.Show;
    fu.pgMain.ActivePage := ts;
  end;

end;


procedure TfrmLstEditSOSJ.btnHapusClick(Sender: TObject);
var
  q : TZQuery;
  i, id: Integer;
begin
  inherited;

  if zqrSJ.IsEmpty then Abort;
  
  i := QBox(Self, 'Hapus Surat Jalan Nomor : ' + zqrSJ.FieldByName('no_bukti').AsString + ' ?','Hapus');
  if i = IDYES then begin
    try
      id := zqrSJ.FieldByName('id').AsInteger;
      dm.zConn.StartTransaction;
      dm.zConn.ExecuteDirect(Format('DELETE FROM tbl_sj_head WHERE id = %d',[id]));
      dm.zConn.ExecuteDirect(Format('DELETE FROM tbl_sj_det WHERE id_ref = %d',[id]));
      dm.zConn.ExecuteDirect(Format('DELETE FROM tbl_history WHERE no_bukti = ''%s''',
        [zqrSJ.FieldByName('no_bukti').AsString]));
      dm.zConn.Commit;

      MsgBox('Surat jalan dengan Nomor : ' + zqrSJ.FieldByname('no_bukti').AsString + ' sudah berhasil dihapus.');
      MsgBox('Lakukan kalkulasi ulang stok dari menu Setting - Kalkulasi Ulang.');

      zqrSJ.Close;
      zqrSJ.Open;
    except
      on E: Exception do begin
        dm.zConn.Rollback;
        MsgBox('Error: ' + E.Message);
      end;
    end;
  end;
end;


procedure TfrmLstEditSOSJ.btnPostingClick(Sender: TObject);
var
  qc, qd, q, qbrg: TZQuery;
  sa: real;
begin
  inherited;

  q := OpenRS('SELECT f_posting FROM tbl_sj_head WHERE id = %d',
    [zqrSJ.FieldByName('id').AsInteger]);
  if (not q.IsEmpty) and (q.FieldByName('f_posting').AsInteger = 1) then begin
    MsgBox('Transaksi sudah di terposting.');
    q.Close;
    Abort;
  end;
  q.Close;

  q := OpenRS('SELECT no_bukti FROM tbl_history WHERE no_bukti = ''%s''',
    [zqrSJ.FieldByName('no_bukti').AsString]);
  if not q.IsEmpty then begin
    MsgBox('Transaksi sudah di terposting.');
    q.Close;
    Abort;
  end;
  q.Close;

  try
    q := OpenRS('SELECT a.id_brg, a.id_gdg, a.qty, b.kode, b.deskripsi ' +
      'FROM tbl_sj_det a ' +
      'LEFT JOIN tbl_barang b ON b.id = a.id_brg ' +
      'WHERE id_ref = %s',[zqrSJ.FieldByName('id').AsString]);
    while not q.Eof do begin
      sa := GetStokAkhir(q.FieldByName('id_brg').AsInteger, q.FieldByName('id_gdg').AsInteger);
      if sa < q.FieldByName('qty').AsFloat then begin
        MsgBox('Stok Barang : ' + q.FieldByName('kode').AsString + ', ' +
          q.FieldByName('deskripsi').AsString + ' tidak mencukupi ( ' +
          FormatFloat('#,#0.00', sa) +' )');
        MsgBox('Posting dibatalkan.');
        q.Close;
        Abort;
      end;
      q.Next;
    end;
    q.Close;
  except
  end;

  try
    dm.zConn.StartTransaction;

    Screen.Cursor := crSQLWait;
    q := OpenRS('SELECT * FROM tbl_history WHERE no_bukti = ''%s''',[zqrSJ.FieldByName('no_bukti').AsString]);
    qd := OpenRS('SELECT * FROM tbl_sj_det WHERE id_ref = %s',[zqrSJ.FieldByName('id').AsString]);

    while not qd.Eof do begin
      with q do begin
        Insert;
        FieldByName('no_bukti').AsString := zqrSJ.FieldByName('no_bukti').AsString;
        FieldByName('tanggal').AsDateTime := Aplikasi.TanggalServer;
        FieldByName('kode_brg').AsString := qd.FieldByName('kode_brg').AsString;
        FieldByName('id_brg').AsInteger := qd.FieldByName('id_brg').AsInteger;
        FieldByName('qty').AsFloat := qd.FieldByName('qty').AsFloat;
        FieldByName('tipe').AsString := 'o';
        FieldByName('id_satuan').AsInteger := qd.FieldByName('id_satuan').AsInteger;
        FieldByname('id_gdg').AsInteger := qd.FieldByName('id_gdg').AsInteger;
        FieldByName('keterangan').AsString := qd.FieldByName('keterangan').AsString;
        FieldByName('tgl_input').AsDateTime := Aplikasi.NowServer;
        FieldByName('user').AsString := Aplikasi.NamaUser;
        FieldByName('user_dept').AsString := Aplikasi.UserDept;
        Post;
      end;

      qbrg := OpenRS('SELECT * FROM tbl_barang WHERE id = %s',[qd.FieldByName('id_brg').AsString]);
      qbrg.Edit;
      qbrg.FieldByName('stok').AsFloat := qbrg.FieldByName('stok').AsFloat - qd.FieldByName('qty').AsFloat;
      qbrg.Post;
      qbrg.Close;

      qbrg := OpenRS('SELECT * FROM tbl_barang_det WHERE id_brg = %s AND id_gdg = %s',
        [qd.FieldByName('id_brg').AsString, qd.FieldByName('id_gdg').AsString]);
      if qbrg.IsEmpty then begin
        qbrg.Insert;
        qbrg.FieldByName('id_brg').AsInteger := qd.FieldByName('id_brg').AsInteger;
        qbrg.FieldByName('kode_brg').AsString := qd.FieldByName('kode_brg').AsString;
        qbrg.FieldByName('id_gdg').AsInteger := qd.FieldByName('id_gdg').AsInteger;
      end
      else
        qbrg.Edit;
      qbrg.FieldByName('stok').AsFloat := qbrg.FieldByName('stok').AsFloat - qd.FieldByName('qty').AsFloat;
      qbrg.Post;
      qbrg.Close;

      dm.zConn.ExecuteDirect(Format('UPDATE tbl_sj_head SET f_posting = 1 WHERE id = %s',
        [zqrSJ.FieldByName('id').AsString]));

      qd.Next;
    end;

    dm.zConn.Commit;

    CheckSOComplete;

    Screen.Cursor := crDefault;
    MsgBox('Transaksi surat jalan sudah di posting.');

    btnRefreshClick(nil);

  except
    on E: Exception do begin
      dm.zConn.Rollback;
      Screen.Cursor := crDefault;
      MsgBox('Error: ' + E.Message);
    end;
  end;
end;

procedure TfrmLstEditSOSJ.btnRefreshClick(Sender: TObject);
var
  bm: Variant;
begin
  inherited;
  try
    bm := zqrSJ.Bookmark;
    zqrSJ.Close;
    zqrSJ.Open;
    zqrSJ.Bookmark := bm;
  except
  end;
end;

procedure TfrmLstEditSOSJ.btnTambahClick(Sender: TObject);
var
  f: TfrmInputSuratJalan;
  ts: TcxTabSheet;
begin
  inherited;
  if not fu.CekTabOpen('Input Surat Jalan') then begin
    ts := TcxTabSheet.Create(Self);
    ts.PageControl := frmUtama.pgMain;
    f := TfrmInputSuratJalan.Create(Self);
    f.TabSheet := Self.Parent as TcxTabSheet;
    f.FormInduk := Self;
    f.Jenis := 'T';
    f.Parent := ts;
    ts.Caption := f.Caption;
    f.Show;
    fu.pgMain.ActivePage := ts;
  end;
end;

procedure TfrmLstEditSOSJ.Button1Click(Sender: TObject);
var
  f: TFrmLapSJ;
begin
  inherited;

  if zqrSJ.FieldByName('f_posting').AsInteger = 0 then begin
    MsgBox('Surat Jalan belum bisa di cetak karena belum di posting.');
    Abort;
  end;

  f := TfrmLapSJ.Create(Self);
  with f do begin
    zqrSJ01.Close;
    zqrSJ01.ParamByName('id').AsInteger := zqrSJ.FieldByName('id').AsInteger;
    zqrSJ01.Open;
    if zqrSJ.FieldByName('f_ppn').AsInteger = 1 then
      rptSJ01.ShowReport(True)
    else
      rptSJ01NonPPN.ShowReport(True);

    if zqrSJ.FieldByName('f_ppn').AsInteger = 1 then
      rptFakturPenjualan.ShowReport(True)
    else
      rptFakturPenjualanNonPPN.ShowReport(True);
  end;
end;

procedure TfrmLstEditSOSJ.Button2Click(Sender: TObject);
var
  f: TFrmLapSJ;
begin
  inherited;

  if zqrSJ.FieldByName('f_posting').AsInteger = 0 then begin
    MsgBox('Surat Jalan belum bisa di cetak karena belum di posting.');
    Abort;
  end;

  f := TfrmLapSJ.Create(Self);
  with f do begin
    zqrSJ01.Close;
    zqrSJ01.ParamByName('id').AsInteger := zqrSJ.FieldByName('id').AsInteger;
    zqrSJ01.Open;
    if zqrSJ.FieldByName('f_ppn').AsInteger = 1 then
      rptSJ01.ShowReport(True)
    else
      rptSJ01NonPPN.ShowReport(True);
  end;
end;

procedure TfrmLstEditSOSJ.cxtbSJFocusedRecordChanged(
  Sender: TcxCustomGridTableView; APrevFocusedRecord,
  AFocusedRecord: TcxCustomGridRecord; ANewItemRecordFocusingChanged: Boolean);
begin
  inherited;
  try
    zqrSJDet.Close;
    zqrSJDet.ParamByName('id_ref').AsInteger := zqrSJ.FieldByName('id').AsInteger;
    zqrSJDet.Open;
  except
  end;
end;

procedure TfrmLstEditSOSJ.FormCreate(Sender: TObject);
begin
  inherited;
  Self.TerapkanWewenang('mnMkt_SuratJalan');
  zqrSJ.Open;
  cxColTblTrsMasukHeadno_bukti.SortOrder := soAscending;
end;

function TfrmLstEditSOSJ.CheckSOComplete: boolean;
var
  qsj, q: TZQuery;
  f: Boolean;
  a,b: Extended;
  i: integer;
begin
  if zqrSJ.FieldByname('jenis_sj').AsInteger = 0 then begin
    qsj := OpenRS('SELECT * FROM tbl_sj_det WHERE id_ref = %s',[zqrSJ.FieldByname('id').AsString]);
    with qsj do begin
      q := OpenRS('SELECT a.id_brg, a.qty, (SELECT SUM(qty) FROM tbl_sj_det WHERE id_so = a.id_ref AND id_brg = a.id_brg) qty_kirim ' +
        'FROM tbl_so_det a WHERE a.id_ref = %s',[qsj.FieldByname('id_so').AsString]);
      f := False;
      while not q.Eof do begin
        a := q.FieldByName('qty').AsFloat;
        b := q.FIeldByName('qty_kirim').AsFloat;
        if (CompareValue(a, b) = 0) or (CompareValue(a,b) = -1) then
          f := true
        else begin
          f := false;
          Break;
        end;
        q.Next;
      end;
      if f then
        dm.zConn.ExecuteDirect(Format('UPDATE tbl_so_head SET f_completed = 1 WHERE id = %s',[qsj.FieldByname('id_so').AsString]));
    end;
  end;
end;

end.
