unit unFrmKalkulasiStok;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, StdCtrls, ZDataSet, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, cxContainer, cxEdit, dxSkinsCore, dxSkinBlack,
  dxSkinBlue, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide,
  dxSkinFoggy, dxSkinGlassOceans, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMoneyTwins,
  dxSkinOffice2007Black, dxSkinOffice2007Blue, dxSkinOffice2007Green,
  dxSkinOffice2007Pink, dxSkinOffice2007Silver, dxSkinOffice2010Black,
  dxSkinOffice2010Blue, dxSkinOffice2010Silver, dxSkinPumpkin, dxSkinSeven,
  dxSkinSharp, dxSkinSilver, dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008,
  dxSkinsDefaultPainters, dxSkinValentine, dxSkinXmas2008Blue, cxCheckBox,
  cxTextEdit, cxMaskEdit, cxDropDownEdit, cxLookupEdit, cxDBLookupEdit,
  cxDBLookupComboBox, DB, ZAbstractRODataset;

type
  TfrmKalkulasiStok = class(TForm)
    btnProses: TButton;
    prgBar: TProgressBar;
    btnBatal: TButton;
    RichEdit1: TRichEdit;
    Label1: TLabel;
    cxChkHitungHPP: TcxCheckBox;
    cxlBrg: TcxLookupComboBox;
    zqrBrg: TZReadOnlyQuery;
    dsBrg: TDataSource;
    procedure btnProsesClick(Sender: TObject);
    procedure btnBatalClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    procedure HitungHPP;
  public
    { Public declarations }
  end;

var
  frmKalkulasiStok: TfrmKalkulasiStok;

implementation

uses unAplikasi, unDM, unTools;

{$R *.dfm}

procedure TfrmKalkulasiStok.btnProsesClick(Sender: TObject);
var
  q, q2: TZQuery;
  iStok: real;
  sql, sGdg: string;
  stok: Extended;
begin
  if cxChkHitungHPP.Checked then begin
    if Trim(cxlBrg.Text) = '' then begin
      MsgBox('Pilih kode barang / semua.');
      Abort;
    end;
  end;

  q2 := OpenRS('SELECT * FROM tbl_gudang WHERE f_aktif = 1 ORDER BY kode');

  Label1.Caption := '';
  Label1.Visible := True;

  Self.Refresh;

  while not q2.Eof do begin
    Application.ProcessMessages;
    sGdg := q2.FieldByName('id').AsString;
    Label1.Caption := 'Update Detail Stok... (' + q2.FieldByName('kode').AsString + ')';
    Self.Refresh;
    {
    sql :=
    'select kode_brg, ' +
    'sum(sawal_' + sGdg + ') sawal, ' +
    'sum(IN_) IN_, ' +
    'sum(OUT_) OUT_ ' +
    'from ( ' +
    'select kode_brg, ' +
    '0 sawal_' + sGdg + ', ' +
    'sum(IN_) IN_, ' +
    'sum(OUT_) OUT_ ' +
    'from v_history_brg WHERE gudang = ''' + sGdg + ''' ' +
    'group by kode_brg ' +
    'union ' +
    'select kode kode_brg, stokawal, ' +
    '0 IN_, ' +
    '0 OUT_ ' +
    'from tbl_stkawal WHERE kode_gdg = ''' + sGdg + ''') a ' +
    'group by a.kode_brg';
    }

    //sql := 'select kode_brg, ' +
    //  'sum(IN_) IN_, ' +
    //  'sum(OUT_) OUT_ ' +
    //  'from v_history_brg WHERE gudang = ''' + sGdg + ''' ' +
    //  'group by kode_brg';

    {
    sql := 'SELECT b.kode AS kode_brg, IFNULL(IN_,0) IN_, IFNULL(OUT_,0) OUT_ from ' +
           '(' +
           'select kode_brg, ' +
           'sum(IN_) IN_, ' +
           'sum(OUT_) OUT_ ' +
           'from v_history_brg ' +
           'WHERE gudang = ''' + sGdg + ''' ' +
           'group by kode_brg ' +
           ') a RIGHT JOIN tbl_barang b ON a.kode_brg = b.kode';
    }
    dm.zConn.ExecuteDirect('DROP TABLE IF EXISTS _tmp_hist0');
    dm.zConn.ExecuteDirect('create temporary table _tmp_hist0 ' +
       'select id_brg, ' +
       'sum(IN_) IN_, ' +
       'sum(OUT_) OUT_ ' +
       'from v_history_brg ' +
       'WHERE id_gdg = ''' + sGdg + ''' ' +
       'group by id_brg');
    dm.zConn.ExecuteDirect('ALTER TABLE _tmp_hist0 add index idxkodebrg (id_brg)');

    {
    sql := 'SELECT b.id AS id, IFNULL(IN_,0) IN_, IFNULL(OUT_,0) OUT_ ' +
      'from _tmp_hist0 a ' +
      'RIGHT JOIN tbl_barang b ON a.id_brg = b.id WHERE b.f_aktif = 1';
    }

    sql := 'SELECT b.id AS id, IFNULL(IN_,0) IN_, IFNULL(OUT_,0) OUT_ ' +
      'from _tmp_hist0 a ' +
      'RIGHT JOIN tbl_barang b ON a.id_brg = b.id';

    q := OpenRS(sql);

    if q.IsEmpty then
      dm.zConn.ExecuteDirect('UPDATE tbl_barang_det SET stok = 0 ' +
        'WHERE id_gdg = ''' + sGdg + '''')
    else begin
      btnProses.Enabled := False;
      btnBatal.Enabled := False;

      dm.zConn.StartTransaction;

      Screen.Cursor := crSQLWait;

      try
        prgBar.Position := 0;
        prgBar.Refresh;
        prgBar.Max := q.RecordCount;

        while not q.Eof do begin

          iStok := q.FieldByName('IN_').AsFloat -
            q.FieldByName('OUT_').AsFloat;

          dm.zConn.ExecuteDirect('DELETE FROM tbl_barang_det WHERE id_gdg = ''' +
            sGdg + ''' AND id_brg = ''' +
            q.FieldByName('id').AsString + '''');

          dm.zConn.ExecuteDirect('INSERT INTO tbl_barang_det ' +
            'SET id_brg = ''' + q.FieldByName('id').AsString + ''', ' +
            'id_gdg = ''' + sGdg + ''', ' +
            'stok = ' + StringReplace(FloatToStr(iStok),',','.',[rfReplaceAll]));

          prgBar.Position := prgBar.Position + 1;
          q.Next;
        end;
        dm.zConn.Commit;
      except
        on E: Exception do begin
          MsgBox('Terjadi error: ' + E.Message);
          dm.zConn.Rollback;
          btnProses.Enabled := True;
          btnBatal.Enabled := True;
        end;
      end;

      Screen.Cursor := crDefault;

    end;
    q.Close;
    q := nil;

    q2.Next;
  end;
  q2.Close;

  try
  label1.Caption := 'Update Stok Barang...';
  Self.Refresh;
  dm.zConn.StartTransaction;
  q2 := OpenRS('SELECT id FROM tbl_barang');
  prgBar.Position := 0;
  prgBar.Max := q2.RecordCount;
  Screen.Cursor := crSQLWait;
  while not q2.Eof do begin
    prgBar.Position := prgBar.Position + 1;
    dm.zConn.ExecuteDirect('UPDATE tbl_barang SET stok = sf_get_stok(' +
      q2.FieldByName('id').AsString + ') WHERE id = ' +
      q2.FieldByName('id').AsString);
    q2.Next;
  end;
  q2.Close;
  dm.zConn.Commit;
  Screen.Cursor := crDefault;
  except
  end;
  
  btnProses.Enabled := True;
  btnBatal.Enabled := True;

  if cxChkHitungHPP.Checked then Self.HitungHPP;

  MsgBox('Proses kalkulasi stok selesai.');

  Close;
end;

procedure TfrmKalkulasiStok.btnBatalClick(Sender: TObject);
begin
  Close;
  Release;
end;

procedure TfrmKalkulasiStok.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  Release;
end;

procedure TfrmKalkulasiStok.HitungHPP;
var
  q, q2: TZQuery;
  lhpp, lsa: real;
  i, id_brg, row: Integer;

begin

  // version 3
  dm.zConn.ExecuteDirect('call sp_tmp_ks');
  if cxlBrg.Text = ' SEMUA' then
    q := OpenRS('select a.no_bukti, a.tanggal, a.id_brg, a.masuk as qty, a.keluar, ifnull(b.harga,0) harga, a.stok_akhir ' +
      'from _ks a ' +
      'left join tbl_pb_det b on a.no_bukti = b.no_bukti and b.id_brg = a.id_brg ' +
      '-- where a.id_brg in (93,94) '  +
      'order by a.id_brg, a.tanggal, a.id')
  else
    q := OpenRS('select a.no_bukti, a.tanggal, a.id_brg, a.masuk as qty, a.keluar, ifnull(b.harga,0) harga, a.stok_akhir ' +
      'from _ks a ' +
      'left join tbl_pb_det b on a.no_bukti = b.no_bukti and b.id_brg = a.id_brg ' +
      'where a.id_brg = ' + VarToStr(cxlBrg.EditValue) + ' ' +
      'order by a.id_brg, a.tanggal, a.id');

  i := 1;
  lsa := 0;
  lhpp := 0;
  id_brg := 0;

  q.Last;
  row := q.RecordCount;
  q.First;

  if cxlBrg.Text = ' SEMUA' then
    dm.zConn.ExecuteDirect('DELETE FROM tbl_history_hpp')
  else
    dm.zConn.ExecuteDirect('DELETE FROM tbl_history_hpp WHERE id_brg = ' +
      VarToStr(cxlBrg.EditValue));

  q2 := OpenRS('SELECT * FROM tbl_history_hpp');

  Screen.Cursor := crSQLWait;

  prgBar.Position := 0;
  prgBar.Max := row;
  label1.Caption := 'Hitung HPP';

  while not q.Eof do begin
    Application.ProcessMessages;
    Self.Refresh;

    if id_brg <> q.FieldByname('id_brg').AsInteger then begin
      id_brg := q.FieldByName('id_brg').AsInteger;
      lhpp := 0;
      lsa := 0;
      i := 1;
    end;

    if (Copy(q.FieldByname('no_bukti').AsString,1,2) = 'PB') or (Copy(q.FieldByname('no_bukti').AsString,1,2) = 'IN') then begin
      try
        if i = 1 then
          lhpp := ((q.FieldByName('qty').AsFloat * q.FieldByName('harga').AsFloat)) /
            q.FieldByName('qty').AsFloat
        else
          lhpp := ((q.FieldByName('qty').AsFloat * q.FieldByName('harga').AsFloat) +
            (lsa * lhpp)) / (q.FieldByName('qty').AsFloat + lsa);

        q2.Insert;
        q2.FieldByName('tanggal').AsDateTime := q.FieldByname('tanggal').AsDateTime;
        q2.FieldByName('no_bukti').AsString := q.FieldByName('no_bukti').AsString;
        q2.FieldByName('id_brg').AsInteger := q.FieldByName('id_brg').AsInteger;
        q2.FieldByName('qty').AsFloat := q.FieldByName('qty').AsFloat;
        q2.FieldByName('harga').AsFloat := q.FieldByName('harga').AsFloat;
        q2.FieldByName('sa').AsFloat := lsa;
        q2.FieldByname('avg').AsFloat := lhpp;
        q2.Post;
      except
      end;
    end;

    lsa := q.FieldByName('stok_akhir').AsFloat;

    id_brg := q.FieldByName('id_brg').AsInteger;
    q.Next;
    Inc(i);
    prgBar.Position := prgBar.Position + 1;
  end;
  q.Close;

  try
    dm.zConn.ExecuteDirect('DELETE FROM tbl_hpp');

    q := OpenRS('select a.id_brg, a.avg ' +
      'from tbl_history_hpp a ' +
      'inner join (select max(id) id from tbl_history_hpp group by id_brg) b on a.id = b.id');
    q.Last;
    prgBar.Max := q.RecordCount;
    q.First;
    while not q. do

  except
    Screen.Cursor := crDefault;
  end;



  Screen.Cursor := crDefault;
end;

end.
